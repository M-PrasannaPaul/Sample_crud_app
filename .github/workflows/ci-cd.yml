name: CI/CD Workflow for Flask App with Docker and ACR

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Log in to Azure Container Registry
      - name: Log in to Azure Container Registry
        run: |
          az login --service-principal \
            --username ${{ secrets.ACR_USERNAME }} \
            --password ${{ secrets.ACR_PASSWORD }} \
            --tenant d7d7efd6-955f-4294-8526-b638e0bc351b
          az acr login --name myregistry123456

      # Step 3: Debug the working directory to ensure all necessary files are present
      - name: Debug working directory
        run: |
          echo "Current Directory:"
          pwd
          echo "Files in Build Context:"
          ls -l ./log_monitoring
          echo "Files in ./log_monitoring/app/templates:"
          ls -l ./log_monitoring/app/templates

      # Step 4: Build and push the Docker image to ACR
      - name: Build and push Docker image
        run: |
          docker build -t myregistry123456.azurecr.io/dockerapp:latest ./log_monitoring  # Set the build context to ./log_monitoring
          docker push myregistry123456.azurecr.io/dockerapp:latest        # Push to ACR

      # Step 5: Deploy to Azure Web App
      - name: Azure Web App Deploy
        uses: azure/webapps-deploy@v2
        with:
          app-name: dockerapp  # Replace with your Azure App Service name
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}  # Azure Publish Profile from secrets
          images: 'myregistry123456.azurecr.io/dockerapp:latest'  # Reference the pushed image
