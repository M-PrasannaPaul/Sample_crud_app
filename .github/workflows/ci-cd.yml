name: CI/CD Workflow for Flask App with Docker and ACR

on:
  push:
    branches:
      - main  # This ensures the workflow runs when you push to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # GitHub Actions runs the job on Ubuntu

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Log in to Azure Container Registry
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.myregistry123456.azurecr.io }}  # Your ACR name (e.g., myregistry.azurecr.io)
          username: ${{ secrets.myregistry123456 }}  # ACR username
          password: ${{ secrets.AZewFHXuYpWXeY1Km3JurxpqcV7jegS0wTzQFh4+yw+ACRCTfa6k }}  # ACR password

      # Step 3: Build and push the Docker image to ACR
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.myregistry123456.azurecr.io }}/dockerapp:latest .  # Replace 'yourflaskapp' with your app's name
          docker push ${{ secrets.myregistry123456.azurecr.io }}/dockerapp:latest  # Push to ACR

      # Step 4: Deploy to Azure Web App
      - name: Azure Web App Deploy
        uses: azure/webapps-deploy@v2
        with:
          app-name: dockerapp # Replace with your Azure App Service name
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}  # Add Azure Publish Profile as a secret
