name: Build and deploy container app to Azure Web App - dockerapp

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v2

    # Step 2: Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Step 3: Log in to Azure Container Registry
    - name: Log in to Azure Container Registry
      uses: docker/login-action@v2
      with:
        registry: myregistry123456.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    # Step 4: Debug the working directory to ensure correct files are in place
    - name: Debug working directory
      run: |
        pwd
        ls -l

    # Step 5: Build and push container image to ACR
    - name: Build and push container image
      uses: docker/build-push-action@v3
      with:
        context: ./log_monitoring # Point to the directory containing the Dockerfile
        push: true
        tags: myregistry123456.azurecr.io/dockerapp:latest  # Ensure correct image tagging
        file: ./log_monitoring/Dockerfile  # Specify the correct path to the Dockerfile

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'

    steps:
    # Step 1: Deploy to Azure Web App
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'dockerapp'  # Ensure it matches the App Service name
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        images: 'myregistry123456.azurecr.io/dockerapp:latest'  # Reference pushed image
